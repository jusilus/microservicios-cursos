#Definimos un nombre para que se pueda registrar en Eureka
spring.application.name=microservicios-cursos
#Configuramos un puerto aleatorio para cada instancia del microservicio. Con 0 es automático.
server.port=${PORT:0}
#Configuramos la instancia id de este servicio en Eureka
eureka.instance.instance-id=${spring.application.name}:${random.value}
#Configuramos la ruta de Eureka donde el microservicio debe registrarse. Por defecto siempre busca en localhost.
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#Configuramos la conexión a la BBDD
spring.datasource.url=jdbc:mysql://192.168.1.6:3306/db_microservicios_examenes?zeroDateTimeBehavior=convertToNull&useTimezone=true&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=david
spring.datasource.password=Dav12Ito34
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=false
#Configuración del logging
logging.level.org.hibernate.SQL=debug
#Deshabilitamos ribbon como balanceador.
spring.cloud.loadbalancer.ribbon.enabled=false